{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cCodigoT",
				"cCodigoTipoBestseller"
			],
			[
				"cCod",
				"cCodTip"
			],
			[
				"cC",
				"cCodigoPropiedadBestseller"
			],
			[
				"cCodigc",
				"cCodigoCategriaBestseller"
			],
			[
				"cCodigoC",
				"cCodigoCategoria"
			],
			[
				"cCodigoCa",
				"cCodigoCategriaBestseller"
			],
			[
				"dbf",
				"dbfCategorias"
			],
			[
				"st",
				"static"
			],
			[
				"s",
				"static"
			],
			[
				"F",
				"Familia"
			],
			[
				"fa",
				"Familia"
			],
			[
				"cN",
				"cNombreFamilia"
			],
			[
				"cCodigo",
				"cCodigoFamiliaBestseller"
			],
			[
				"db",
				"dbfArticulo"
			],
			[
				"No",
				"Nombre"
			],
			[
				"N",
				"Nombre"
			],
			[
				"It",
				"IteratorPrimeraPropiedad"
			],
			[
				"oXm",
				"oXmlNode"
			],
			[
				"IteratorP",
				"IteratorTemporadaArticulo"
			],
			[
				"oX",
				"oXmlNode"
			],
			[
				"C",
				"Codigo"
			],
			[
				"Proc",
				"ProccessArticulo"
			],
			[
				"sta",
				"Static"
			],
			[
				"n",
				"nPrice"
			],
			[
				"cD",
				"cData"
			],
			[
				"h",
				"hArticulo"
			],
			[
				"I",
				"IteratorNombreArticulo"
			],
			[
				"o",
				"oNode"
			],
			[
				"do",
				"cDocumentXml"
			],
			[
				"cX",
				"cXml"
			],
			[
				"hrb",
				"hrb"
			],
			[
				"cFicheroPrg",
				"cFicheroPrg"
			],
			[
				"p",
				"ProccessXml"
			],
			[
				"P",
				"ProccessXml"
			],
			[
				"O",
				"oNode"
			],
			[
				"dat",
				"DATA"
			],
			[
				"R",
				"Run"
			],
			[
				"t",
				"TImportarArticulosBestseller"
			],
			[
				"cF",
				"cFicheroHbr"
			],
			[
				"eje",
				"EjecutarScript"
			],
			[
				"Com",
				"CompilarScript"
			],
			[
				"Eje",
				"EjecutarScript"
			],
			[
				"msg",
				"msgWait"
			],
			[
				"oXml",
				"oXmlDocument"
			],
			[
				"ms",
				"msginfo"
			],
			[
				"nSer",
				"nSerialCRC"
			],
			[
				"Cursor",
				"CursorWE"
			],
			[
				"ne",
				"next"
			],
			[
				"oTree",
				"oTreeMes"
			],
			[
				"Ot",
				"oTreeMes"
			],
			[
				"daT",
				"DATA"
			],
			[
				"OtREE",
				"oTreeSemana"
			],
			[
				"el",
				"else"
			],
			[
				"OnClick",
				"OnClickIgnoraPreocesado"
			],
			[
				"nTree",
				"nTreeSemana"
			],
			[
				"nTre",
				"nTreeMes"
			],
			[
				"oTre",
				"oTreeSemana"
			],
			[
				"se",
				"Self"
			],
			[
				"me",
				"METHOD"
			],
			[
				"if",
				"ife	if..else..endif"
			],
			[
				"ex",
				"exprFalse"
			],
			[
				"arra",
				"Array"
			],
			[
				"Plan",
				"Plantilla"
			],
			[
				"mta",
				"meta"
			],
			[
				"color",
				"background-color"
			],
			[
				"al",
				"vertical-align"
			],
			[
				"imma",
				"image-resolution	zen:css_properties"
			],
			[
				"col",
				"color"
			],
			[
				"colo",
				"background-color"
			],
			[
				"bo",
				"border-radius"
			],
			[
				"w",
				"width"
			],
			[
				"in",
				"inline-block"
			],
			[
				"ma",
				"max-width"
			],
			[
				"te",
				"text-align"
			],
			[
				"He",
				"Arial, Helvetica, sans-serif"
			],
			[
				"font",
				"font-family"
			],
			[
				"hea",
				"header"
			]
		]
	},
	"buffers":
	[
		{
			"file": "prg/Factu.prg",
			"settings":
			{
				"buffer_size": 186793,
				"line_ending": "Windows"
			}
		},
		{
			"file": "prg/Familia.prg",
			"settings":
			{
				"buffer_size": 94327,
				"line_ending": "Windows"
			}
		},
		{
			"file": "prg/Plantillaxml.prg",
			"settings":
			{
				"buffer_size": 113642,
				"line_ending": "Windows"
			}
		},
		{
			"file": "prg/Tscripts.prg",
			"settings":
			{
				"buffer_size": 9473,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#include \"HbXml.ch\"\n#include \"TDbfDbf.ch\"\n\n//---------------------------------------------------------------------------//\n\nstatic aXmlDocuments\nstatic oXmlDocument\n\nstatic oXmlNode\n\nstatic cDirectoryXml\n\nstatic hArticulo\n\nstatic dbfArticulo\nstatic dbfCodebar\nstatic dbfFamilia\nstatic dbfPropieades\nstatic dbfCategorias\nstatic dbfTipoArticulo\n\n//---------------------------------------------------------------------------//\n\nFunction ImportaXmlBestseller()\n\n   local cDocumentXml\n\n   dbUseArea( .t., ( cDriver() ), ( cPatArt() + \"Articulo.Dbf\" ), ( cCheckArea( \"Articulo\", @dbfArticulo ) ), .t., .f. )\n   if !lAIS() ; ordListAdd( ( cPatArt() + \"Articulo.Cdx\" ) ) ; else ; ordSetFocus( 1 ) ; end\n\n   dbUseArea( .t., ( cDriver() ), ( cPatArt() + \"ArtCodebar.Dbf\" ), ( cCheckArea( \"ArtCodebar\", @dbfCodebar ) ), .t., .f. )\n   if !lAIS() ; ordListAdd( ( cPatArt() + \"ArtCodebar.Cdx\" ) ) ; else ; ordSetFocus( 1 ) ; end\n\n   dbUseArea( .t., ( cDriver() ), ( cPatArt() + \"Familias.Dbf\" ), ( cCheckArea( \"Familias\", @dbfFamilia ) ), .t., .f. )\n   if !lAIS() ; ordListAdd( ( cPatArt() + \"Familias.Cdx\" ) ) ; else ; ordSetFocus( 1 ) ; end\n\n   dbUseArea( .t., ( cDriver() ), cPatArt() + \"Pro.Dbf\", cCheckArea( \"Pro\", @dbfPropieades ), .f. )\n   if !lAIS() ; ordListAdd( ( cPatArt() + \"Pro.Cdx\" ) ) ; else ; ordSetFocus( 1 ) ; end\n\n   dbUseArea( .t., ( cDriver() ), cPatArt() + \"Categorias.Dbf\", cCheckArea( \"Categorias\", @dbfCategorias ), .f. )\n   if !lAIS() ; ordListAdd( ( cPatArt() + \"Categorias.Cdx\" ) ) ; else ; ordSetFocus( 1 ) ; end\n\n   dbUseArea( .t., ( cDriver() ), cPatArt() + \"Tipart.Dbf\", cCheckArea( \"Tipart\", @dbfTipoArticulo ), .f. )\n   if !lAIS() ; ordListAdd( ( cPatArt() + \"Tipart.Cdx\" ) ) ; else ; ordSetFocus( 1 ) ; end\n\n   cDirectoryXml        := \"c:\\Users\\Calero\\Desktop\\Pricat\" //cGetDir( \"Selecciona directorio\")\n\n   aXmlDocuments        := Directory( cDirectoryXml + \"\\*.*\" )\n\n   if !Empty( aXmlDocuments )\n\n      for each cDocumentXml in aXmlDocuments\n         ProccessXml( cDocumentXml[ 1 ] )\n      next\n\n   else\n\n      msgStop( \"No hay ficheros en el directorio\")\n\n   end if \n\n   ( dbfArticulo )->( dbCloseArea() )\n   ( dbfCodebar  )->( dbCloseArea() )\n   ( dbfFamilia  )->( dbCloseArea() )\n   ( dbfPropieades )->( dbCloseArea() )\n   ( dbfCategorias )->( dbCloseArea() )\n   ( dbfTipoArticulo )->( dbCloseArea() )\n\nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function ProccessXml( cDocumentXml )\n\n   local cXml\n\n   hArticulo            := {=>}\n\n   cDocumentXml         := cDirectoryXml + \"\\\" + cDocumentXml\n\n   // msgStop( cDocumentXml, \"cDocumentXml\" )\n\n   oXmlDocument         := TXmlDocument():New( cDocumentXml )\n\n   if oXmlDocument:nStatus != HBXML_STATUS_OK\n\n      switch oXmlDocument:nStatus\n         case HBXML_STATUS_ERROR\n            msgStop( \"Ay! pillin, nos jorobo alguna cosa....!!\" )\n         case HBXML_STATUS_MALFORMED\n            msgStop( \"No es un documento xml\" )\n      end\n\n   else\n\n      oXmlNode                := oXmlDocument:oRoot\n\n      while !Empty( oXmlNode )\n\n/*         cXml                 := oXmlNode:Path()\n         if Empty( cXml )\n            cXml              :=  \"(Node without path)\"\n         end if \n\n         logwrite( \"cName: \"        + Valtoprg( oXmlNode:cName ) )\n         logwrite( \"aAttributes: \"  + ValToPrg( oXmlNode:aAttributes ) ) \n         logwrite( \"cData: \"        + valtoprg( oXmlNode:cData ) ) \n         logwrite( \"aArray: \"       + valtoprg( oXmlNode:ToArray() ) )\n         logwrite( replicate( \"-\", 80 ) ) */\n\n         ProccessNode( oXmlNode ) \n\n         oXmlNode             := oXmlDocument:Next()\n\n      end while\n\n   end if\n\n   ProccessArticulo()\n\nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function ProccessNode( oXmlNode ) \n\n   local cNodeName   := cValtoChar( oXmlNode:cName )\n\n   do case\n      case cNodeName == \"cac:SellersItemIdentification\" \n         IteratorCodigoArticulo( oXmlNode )       \n\n      case cNodeName == \"cac:Item\"\n         IteratorNombreArticulo( oXmlNode )       \n\n      case cNodeName == \"cac:Price\"\n         IteratorPrieceArticulo( oXmlNode )   \n\n      case cNodeName == \"cac:LineValidityPeriod\"\n         IteratorTemporadaArticulo( oXmlNode )\n\n      case cNodeName == \"cac:CommodityClassification\"\n         IteratorPrimeraPropiedad( oXmlNode )\n\n   end case\n \nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function IteratorCodigoArticulo( oXmlNode )\n\n   local oIter\n   local oNode\n\n   oIter                := TXMLIteratorScan():New( oXmlNode )\n\n   oNode                := oIter:Find( \"cbc:ID\" ) \n\n   if !Empty( oNode )\n      hSet( hArticulo, \"Codigo\", oNode:cData )\n   end if \n\nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function IteratorNombreArticulo( oXmlNode )\n\n   local oIter\n   local oNode\n\n   oIter                := TXMLIteratorScan():New( oXmlNode )\n\n   oNode                := oIter:Find( \"cbc:Description\" ) \n\n   if !Empty( oNode )\n      hSet( hArticulo, \"Nombre\", Upper( oNode:cData ) )\n   end if \n\n   oNode                := oIter:Find( \"cbc:BrandName\" ) \n\n   if !Empty( oNode )\n      hSet( hArticulo, \"Familia\", Upper( oNode:cData ) )\n   end if \n\n   oNode                := oIter:Find( \"cbc:ModelName\" ) \n\n   if !Empty( oNode )\n      hSet( hArticulo, \"Tipo\", Upper( oNode:cData ) )\n   end if \n\nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function IteratorPrieceArticulo( oXmlNode )       \n\n   local oIter\n   local oNode\n   local nPrice\n\n   oIter                := TXMLIteratorScan():New( oXmlNode )\n\n   oNode                := oIter:Find( \"cbc:PriceAmount\" ) \n\n   if !Empty( oNode )\n      nPrice            := Val( oNode:cData )\n   end if \n\n   oNode                := oIter:Find( \"cbc:PriceTypeCode\" ) \n\n   if !Empty( oNode ) .and. ( oNode:cData == \"GRP\" )\n      hSet( hArticulo, \"Costo\", nPrice )\n   end if\n\n   if !Empty( oNode ) .and. ( oNode:cData == \"SRP\" )\n      hSet( hArticulo, \"Venta\", nPrice )\n   end if\n   \nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function IteratorTemporadaArticulo( oXmlNode )\n\n   local oIter\n   local oNode\n\n   oIter                := TXMLIteratorScan():New( oXmlNode )\n\n   oNode                := oIter:Find( \"cbc:Description\" ) \n\n   if !Empty( oNode )\n      hSet( hArticulo, \"Temporada\", Upper( oNode:cData ) )\n   end if \n\nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function IteratorPrimeraPropiedad( oXmlNode )\n\n   local oIter\n   local oNode\n\n   oIter                := TXMLIteratorScan():New( oXmlNode )\n\n   oNode                := oIter:Find( \"cbc:CommodityCode\" ) \n\n   if !Empty( oNode )\n      hSet( hArticulo, \"Primera propiedad\", oNode:cData )\n   end if \n\nReturn ( nil )\n\n//---------------------------------------------------------------------------//\n\nStatic Function ProccessArticulo()\n\n   local lAppend\n\n   lAppend              := !( dbfArticulo )->( dbSeek( hGet( hArticulo, \"Codigo\" ) ) )\n\n   if dbDialogLock( dbfArticulo, lAppend )\n\n      ( dbfArticulo )->Codigo    := hGet( hArticulo, \"Codigo\" )\n      ( dbfArticulo )->Nombre    := hGet( hArticulo, \"Nombre\" )\n\n      ( dbfArticulo )->pCosto    := hGet( hArticulo, \"Costo\" )\n      ( dbfArticulo )->pVtaIva1  := hGet( hArticulo, \"Venta\" )\n\n      ( dbfArticulo )->lIvaInc   := .t.\n      ( dbfArticulo )->TipoIva   := cDefIva()\n\n      ( dbfArticulo )->Familia   := cCodigoFamiliaBestseller( hGet( hArticulo, \"Familia\") )\n\n      ( dbfArticulo )->cCodPrp1  := cCodigoPropiedadBestseller( hGet( hArticulo, \"Primera propiedad\" ) )\n      ( dbfArticulo )->cCodPrp2  := \"003\" // Colores bestseller\n\n      ( dbfArticulo )->cCodTip   := cCodigoTipoBestseller( hGet( hArticulo, \"Tipo\" ) )\n\n      ( dbfArticulo )->( dbUnlock() )\n   \n   end if\n\n   msgStop( valtoprg( hArticulo ), if( lAppend, \"Añadido\", \"Modificado\" ) )\n\nReturn ( nil )   \n\n//---------------------------------------------------------------------------//\n\nFunction cCodigoFamiliaBestseller( cNombreFamilia )\n\n   local cFamilia\n   local cSubFamilia\n   local cCodigoFamiliaBestseller   := \"\"\n\n   cFamilia                         := substr( cNombreFamilia, 1, at( \"/\", cNombreFamilia ) - 1 ) \n   cSubFamilia                      := substr( cNombreFamilia, at( \"/\", cNombreFamilia ) + 1 ) \n\n   if dbSeekInOrd( cSubFamilia, \"cNomFam\", dbfFamilia )\n      cCodigoFamiliaBestseller      := ( dbfFamilia )->cCodFam\n   end if\n\n   if Empty( cCodigoFamiliaBestseller )\n      if dbSeekInOrd( cFamilia, \"cNomFam\", dbfFamilia )\n         cCodigoFamiliaBestseller   := ( dbfFamilia )->cCodFam\n      end if\n   end if\n\nReturn ( cCodigoFamiliaBestseller )\n\n//---------------------------------------------------------------------------//\n\nFunction cCodigoPropiedadBestseller( cCodigoExterno )\n\n   local cCodigoPropiedadBestseller := \"\"\n\n   if dbSeekInOrd( cCodigoExterno, \"cCodExt\", dbfPropieades )\n      cCodigoPropiedadBestseller    := ( dbfPropieades )->cCodPro \n   end if\n\nReturn ( cCodigoPropiedadBestseller )\n\n//---------------------------------------------------------------------------//\n\nFunction cCodigoTipoBestseller( cCodigoTipo )\n\n   local cCodigoTipoBestseller      := \"\"\n\n   if dbSeekInOrd( cCodigoTipo, \"cNomTip\", dbfTipoArticulo )\n      cCodigoCategriaBestseller     := ( dbfTipoArticulo )->cCodTip\n   end if\n\nReturn ( cCodigoTipoBestseller )\n\n//---------------------------------------------------------------------------//\n\n",
			"file": "bin/script/XLM.prg",
			"file_size": 9940,
			"file_write_time": 130021618827027595,
			"settings":
			{
				"buffer_size": 9600,
				"line_ending": "Windows"
			}
		},
		{
			"file": "prg/Tipart.prg",
			"settings":
			{
				"buffer_size": 10834,
				"line_ending": "Windows"
			}
		},
		{
			"file": "prg/Articulo.prg",
			"settings":
			{
				"buffer_size": 661418,
				"line_ending": "Windows"
			}
		},
		{
			"file": "prg/Pro.prg",
			"settings":
			{
				"buffer_size": 67406,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/Harbour.sublime-completions",
			"settings":
			{
				"buffer_size": 4129,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/AAAPackageDev/Support/JSON to Property List.sublime-build",
	"command_palette":
	{
		"height": 58.0,
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"brows",
				"Preferences: Browse Packages"
			],
			[
				"packe",
				"Package Control: List Packages"
			],
			[
				"installe",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"list pa",
				"Package Control: List Packages"
			],
			[
				"cont",
				"Package Control: Install Package"
			],
			[
				"Package Control: add",
				"Package Control: Add Repository"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"she",
				"Set Syntax: Batch File"
			],
			[
				"zen",
				"Zen Coding: Select matching tag name"
			],
			[
				"SHELL",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"INSTALL ",
				"Package Control: Install Package"
			],
			[
				"PACKAGE INS",
				"Package Control: Install Package"
			],
			[
				"ZE",
				"Zen Coding: Wrap zen as you type"
			],
			[
				"control ",
				"Package Control: Install Package"
			],
			[
				"package control i",
				"Package Control: Install Package"
			],
			[
				"package control ins",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Upgrade Package"
			],
			[
				"PAC",
				"Package Control: Install Package"
			],
			[
				"pA",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Add Channel"
			]
		],
		"width": 528.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/fw195/gestool/bin/Trace.Log",
		"/C/Users/Calero/Desktop/Test/Index.html",
		"/C/fw195/gestool/prg/Categoria.prg",
		"/C/fw195/gestool/prg/Usuario.prg",
		"/C/fw195/gestool/prg/Abnprv.prg",
		"/C/fw195/gestool/include/Mesdbf.ch",
		"/C/fw195/gestool/prg/Utildbf.prg",
		"/C/fw195/gestool/prg/Comun.prg",
		"/C/fw195/gestool/prg/Articulo.prg",
		"/C/fw195/gestool/ppo/Articulo.ppo",
		"/C/Users/Calero/Desktop/Pricat/PRICAT_b6f57e03-9596-46c3-98fd-126090ff2a58.xml",
		"/C/fw195/gestool/prg/Xbrowse.prg",
		"/C/fw195/gestool/ppo/FacAuto.ppo",
		"/C/fw195/gestool/bin/script/std.ch",
		"/C/fw195/gestool/ppo/OAcuAAlb.ppo",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/Harbour.sublime-completions",
		"/C/Users/Calero/Desktop/PRICAT_19a08a1b-940a-4b39-83d4-396f5f549580.xml",
		"/C/fw195/gestool/prg/Facauto.prg",
		"/C/fw195/gestool/prg/Divisas.prg",
		"/C/fw195/camero/prg/Factu.prg",
		"/C/fw195/gestool/Hx.mak",
		"/C/fw195/gestool/prg/Bancos.prg",
		"/C/fw195/gestool/Hx.bat",
		"/C/fw195/gestool/.gitignore",
		"/C/fw195/gestool/Gestool.sublime-workspace",
		"/C/fw195/gestool/prg/Btnbmp.prg",
		"/C/fw195/gestool/Hr.bat",
		"/C/fw195/gestool/.git/info/exclude",
		"/C/fw195/gestool/.git/config",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/Harbour.JSON-tmlanguage",
		"/C/fw195/gestool/prg/Activex.prg",
		"/C/fw195/gestool/.gitattributes",
		"/C/fw195/gestool/bin/gstapolo.ini",
		"/C/fw195/gestool/Gestool.bat",
		"/C/fw195/gestool/prg/Abncli.prg",
		"/C/fw195/gestool/Lx.bat",
		"/C/fw195/gestool/Lx.mak",
		"/C/fw195/gestool/prg/Agenda.prg",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/User/Gestool.sublime-build",
		"/C/fw195/gestool/bin/Scmmrc",
		"/C/fw195/gestool/resource/Gsttactil.rc",
		"/C/fw195/gestool/resource/Rptapolo.rc",
		"/C/fw195/gestool/resource/Gstimage12.rc",
		"/C/fw195/gestool/resource/Gstdialog.rc",
		"/C/fw195/gestool/mak/Hx.bat",
		"/C/fw195/gestool/mak/Hr.bat",
		"/C/fw195/gestool/mak/Hx.mak",
		"/C/fw195/camero/prg/Facauto.prg",
		"/C/fw195/camero/prg/Gestool/.gitignore",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/.git/info/exclude",
		"/C/fw195/camero/prg/Gestool/.gitattributes",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/.git/config",
		"/C/fw195/camero/prg/Factcli.prg",
		"/C/fw195/camero/prg/Tiva.prg",
		"/C/fw195/camero/prg/tiva",
		"/C/fw195/camero/prg/Pedcli.prg",
		"/C/fw195/camero/prg/Albprov.prg",
		"/C/fw195/camero/prg/Albcli.prg",
		"/C/fw195/camero/prg/Rectprv.prg",
		"/C/fw195/camero/prg/Precli.prg",
		"/C/fw195/camero/prg/Pedprov.prg",
		"/C/fw195/camero/prg/Factprv.prg",
		"/C/fw195/camero/prg/Facrec.prg",
		"/C/fw195/camero/prg/Tfastventasarticulos.prg",
		"/C/fw195/camero/prg/Tfastventasarticulos.BAK",
		"/C/fw195/camero/prg/Tfacrec.prg",
		"/C/fw195/camero/prg/Faccliant.prg",
		"/C/fw195/camero/prg/Tfacemi.prg",
		"/C/fw195/camero/prg/Tacufaciva.prg",
		"/C/fw195/camero/prg/Impfaccom.prg",
		"/C/fw195/camero/prg/Articulo.prg",
		"/C/fw195/camero/prg/Tivavta.prg",
		"/C/fw195/camero/prg/Grpprv.prg",
		"/C/fw195/camero/Hx.bat",
		"/C/fw195/camero/Lx.bat",
		"/C/fw195/camero/Hx.mak",
		"/C/fw195/camero/Lx.mak",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/EncodingHelper/EncodingHelper.sublime-settings",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/Harbour.tmLanguage",
		"/C/fw195/camero/prg/Grpcli.prg",
		"/C/fw195/camero/prg/Oacuxfac.prg",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/Harbour.sublime-build",
		"/C/fw195/camero/prg/Artcodebar.prg",
		"/C/fw195/camero/prg/Xbrowse.prg",
		"/c/fw195/camero/include/Tdbfdbf.ch",
		"/C/fw195/camero/prg/TComercio.ppo",
		"/C/fw195/camero/INCLUDE/Mesdbf.ch",
		"/C/FWH1012/include/fivewin.ch",
		"/C/fw195/camero/prg/Tcomercio.prg",
		"/C/fw195/camero/prg/FACTU.PRG",
		"/C/fw195/camero/HX.mak",
		"/C/fw195/camero/HX.Bat",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/clipper-master/Clipper.tmLanguage",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/clipper-master/Clipper.JSON-tmlanguage",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/ConsoleExec/README.md",
		"/C/fw195/camero/prg/Carpeta.prg",
		"/C/fw195/camero/prg/TFastVentasArticulos.prg",
		"/C/fw195/camero/prg/Bar.prg",
		"/C/fw195/camero/prg/Gestool.sublime-project",
		"/C/fw195/camero/prg/Errorsysc3.prg",
		"/C/fw195/camero/prg/.prg.ppo",
		"/C/fw195/camero/prg/ABNPRV.PRG",
		"/C/fw195/camero/prg/activex.prg",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/ConsoleExec/console_exec.py",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/ConsoleExec/package-metadata.json",
		"/C/fw195/camero/prg/AVIFILE.PRG",
		"/C/Program Files/Sublime Text 2/clipper-master/Clipper.JSON-tmlanguage",
		"/C/Program Files/Sublime Text 2/clipper-master/README.md",
		"/C/gestool/httpdocs/wp-includes/l10n.php",
		"/C/gestool/httpdocs/wp-content/themes/Tersus/lib/adm/inc/advanced-excerpt/advanced-excerpt.php",
		"/C/gestool/httpdocs/wp-includes/class-http.php",
		"/C/Users/Calero/AppData/Roaming/Microsoft/Firmas/Gestool.htm",
		"/C/Users/Calero/Desktop/Test/ccs/estilos.ccs",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/fw195/camero/FACTU.PRG",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/User/Distraction Free.sublime-settings",
		"/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/User/JSON.sublime-settings",
		"/C/Users/Calero/css/style"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\fw195\\gestool\\prg",
			"C:\\Users\\Calero\\Desktop\\Pricat",
			"C:\\fw195\\gestool\\prg",
			"C:\\xharbour",
			"C:\\fw195\\gestool\\prg",
			"C:\\fw195\\camero\\prg",
			"",
			"t",
			"",
			"C:\\FWH1012\\include",
			"c:\\fw195\\camero\\include",
			"c:\\",
			"c:\\*.ch",
			"c:\\fw195\\camero\\include",
			"C:\\gestool"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"		{ \"trigger\": \"iscntrl\", \"contents\": \"int(${1:cString})\" },\n",
			")\n",
			"   if dbSeekInOrd( cCodigoTipo, \"cNomTip\", dbfTipoArticulo )\n",
			"Return ( cCodigoTipoBestseller )\n",
			"Return ( cCodigoTipoBestseller )",
			"ccodigoTip",
			"tipo",
			"ttipart",
			"tipo de a",
			"dbseekin",
			"on rx",
			"excelwirex",
			"SubStr(",
			"on ccod",
			"dbDialogLock",
			"on wingather",
			"gather",
			"on aGather",
			"on rx",
			"                         }",
			"prop",
			"CommodityCode",
			"CommodityCode>62045200",
			"cbc:ItemClassificationCode>39",
			"39",
			"asort",
			"temporada",
			"on aitm",
			"valtochar",
			"SellersItemIdentification",
			"oxml",
			"class ",
			"CompilarScript",
			"Directory(",
			"directory",
			"adirectory",
			" )",
			"getdir",
			"agetfile",
			"price",
			"oerro",
			"TXmlDocument",
			"txmld",
			"txml",
			"cPatScript",
			"CompilarScript",
			"compilar",
			"TXmlDocument",
			"adocreate",
			"on edtfamilia",
			"edt",
			"termina",
			"termia",
			"terminal",
			"lDemoMode()",
			"ctrlapp",
			"cfileini",
			"demomode",
			"()\n",
			"ldemomode\n",
			"()\n",
			"od inici",
			"130",
			"lCompruebaFecha",
			"checkbox",
			"nombre\" ",
			"aplantilla",
			"llanzaasistente",
			"lmesselecc",
			"llanzaasistente",
			"tvgetCheckState(",
			"oTreem",
			"oTreeMes",
			"od lmessele",
			"gear_16",
			"pencil_16",
			"lpressed",
			"obtnign",
			"IGONORA",
			"refreshas",
			"brc",
			"od star",
			"od start",
			"od stat",
			"lMesSeleccionado",
			"IniRotor",
			"ppo",
			"exe",
			".res",
			"oTree",
			"oTreeSelector",
			"otree",
			"otreese",
			")\n",
			"nMarqueeStyle",
			"dblc",
			":niva",
			"niva",
			"EdtIva(",
			"on edtiva",
			"on EdtI",
			"obrwiva",
			"nCodIva(",
			"niva",
			"producci",
			"nReq",
			"nreq",
			"niva",
			"}\n",
			"  \n",
			"art¡culo",
			"├│",
			"├¡",
			"asort",
			"Cli",
			"on rx",
			"FacCli",
			"oFacRecT",
			"GrpCli",
			"tgrpprv",
			"Tcreafacatuomaticas():crea",
			"TCreaFacAutomaticas",
			"lLanzaAsistente",
			"Pre",
			"on rx",
			"class",
			"from",
			"class"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"::oTreeMes",
			"cCodigoIva(",
			"artículo",
			"ó",
			"í",
			"Rec",
			"FacRec",
			"GrpPrv",
			"Ped",
			"Pedidos",
			"PedCli"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "prg/Factu.prg",
					"settings":
					{
						"buffer_size": 186793,
						"regions":
						{
						},
						"selection":
						[
							[
								140090,
								140250
							]
						],
						"settings":
						{
							"encoding_helper_encoding_sublime": "Western (Windows 1252)",
							"encoding_helper_loading": true,
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 85257.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "prg/Familia.prg",
					"settings":
					{
						"buffer_size": 94327,
						"regions":
						{
						},
						"selection":
						[
							[
								54725,
								54725
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 0.5,
							"encoding_helper_encoding": "ISO-8859-1",
							"encoding_helper_encoding_sublime": "Western (Windows 1252)",
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 38477.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "prg/Plantillaxml.prg",
					"settings":
					{
						"buffer_size": 113642,
						"regions":
						{
						},
						"selection":
						[
							[
								42,
								63
							]
						],
						"settings":
						{
							"encoding_helper_encoding_sublime": "Western (Windows 1252)",
							"encoding_helper_loading": true,
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "prg/Tscripts.prg",
					"settings":
					{
						"buffer_size": 9473,
						"regions":
						{
						},
						"selection":
						[
							[
								8769,
								8769
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 0.5,
							"encoding_helper_encoding": "ISO-8859-1",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6280.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "bin/script/XLM.prg",
					"settings":
					{
						"buffer_size": 9600,
						"regions":
						{
						},
						"selection":
						[
							[
								8994,
								8994
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6208.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "prg/Tipart.prg",
					"settings":
					{
						"buffer_size": 10834,
						"regions":
						{
						},
						"selection":
						[
							[
								2296,
								2296
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 0.5,
							"encoding_helper_encoding": "ISO-8859-1",
							"encoding_helper_encoding_sublime": "Western (Windows 1252)",
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2040.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "prg/Articulo.prg",
					"settings":
					{
						"buffer_size": 661418,
						"regions":
						{
						},
						"selection":
						[
							[
								556105,
								556109
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 0.5,
							"encoding_helper_encoding": "ISO-8859-1",
							"encoding_helper_encoding_sublime": "Western (Windows 1252)",
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 80.0,
						"translation.y": 309508.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "prg/Pro.prg",
					"settings":
					{
						"buffer_size": 67406,
						"regions":
						{
						},
						"selection":
						[
							[
								44148,
								44148
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 0.5,
							"encoding_helper_encoding": "ISO-8859-1",
							"encoding_helper_encoding_sublime": "Western (Windows 1252)",
							"syntax": "Packages/harbour/Harbour.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 30940.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Users/Calero/AppData/Roaming/Sublime Text 2/Packages/harbour/Harbour.sublime-completions",
					"settings":
					{
						"buffer_size": 4129,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										90,
										90
									],
									[
										2712,
										2712
									],
									[
										3846,
										3846
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								4058,
								4058
							]
						],
						"settings":
						{
							"encoding_helper_confidence": 1.0,
							"encoding_helper_encoding": "UTF-8",
							"encoding_helper_encoding_sublime": "UTF-8",
							"syntax": "Packages/AAAPackageDev/Support/Sublime Completions.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1105.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.aaa_package_dev":
	{
		"height": 53.0
	},
	"output.exec":
	{
		"height": 32.0
	},
	"output.find_results":
	{
		"height": 532.0
	},
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 252.0,
	"status_bar_visible": true
}
