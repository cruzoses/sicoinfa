#line 112 "hbclass.ch"
   DYNAMIC DivertConstructorCall
















DECLARE HBClass  New( cName AS String, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS Object  Instance() AS Object  AddClsMethod( cName AS String, @MethodName(), nScope AS Numeric, n2 AS Numeric, n3 AS Numeric )  AddDelegate( cName AS String, cDelegate AS String, cObject AS String, nScope AS Numeric, lPersistent AS LOGICAL )  AddMultiClsData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String )  AddMultiData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  AddInLine( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  AddVirtual( cName AS String )  ModMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  ModClsMethod( cName AS String, @MethodName(), nScope AS Numeric )  ModInline( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  SetOnError( @MethodName() )
#line 85 "\Fwh1204\Include\FiveWin.Ch"
   EXTERNAL GetProcAdd
   EXTERNAL TActiveX




extern errorsys
#line 30 ".\Prg\Rasdial.prg"
Static oTimer,nOldStatus



Function Ras_Dial(cEntry,cUser,cPass,lServer)

Local oDlg,oSay,oBtn,hRas,oIco

IIF( lServer == nil, lServer := .F., ) ;

oDlg = TDialog():New(,,,, "Connecting to "+cEntry, "RASWAIT",, .F.,,,,,, .F.,,,,,, .F., )

oIco := TIcon():ReDefine( 1055,,,, .F., oDlg, )
oSay := TSay():ReDefine( 1053, {|| "Initializing..."}, oDlg,,,, .F.,, .F., .F. )
oBtn := TButton():ReDefine( 1054, {||Dial(cEntry,cUser,cPass,oDlg,oSay,oBtn)}, oDlg,,, .F.,,,, .F. )
TButton():ReDefine( 2, {||(Ras_Hangup(hRas),oDlg:End(),oTimer:end(),hRas := 0)}, oDlg,,, .F.,,,, .F. )

oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T.,,, {|Self|InitTimer(cEntry,cUser,cPass,oDlg,oSay,oBtn,lServer,@hRas,oIco)}, oDlg:bRClicked,,, )

Return(hRas)



Static Function InitTimer(cEntry,cUser,cPass,oDlg,oSay,oBtn,lServer,hRas,oIco)

   static nFrame := 1
   static nDirection := 1
   local nError

   nError := Dial(cEntry,cUser,cPass,oDlg,oSay,oBtn,@hRas)
   if nError == 0

      oTimer := TTimer():New( 450, {||(GetStatus(oDlg,oSay,oBtn,lServer,hRas),RASPWincr(@nFrame,@nDirection,oIco) )}, oDlg )
      oTimer:Activate()

   else
      oDlg:end()
      MsgInfo( iif(LoadString( GetResources(), nError ) == "","Unknown Error "+str(nError),LoadString( GetResources(), nError ) ) )
      hRas := 0
   endif

return nil



Static Function Dial(cEntry,cUser,cPass,oDlg,oSay,oBtn,hRas)

local RasStruct

EnableWindow( oDlg:GetItem(oBtn:nID), .F. )

hRas := 0
nOldStatus := 0

   RasStruct := ThisStruct( TStruct():New() )
    ThisStruct():AddMember( "nSize", 12, )
    ThisStruct():AddMember( "szEntry", 8, 256+1 )
    ThisStruct():AddMember( "szPhone", 8, 128+1 )
    ThisStruct():AddMember( "szCallb", 8, 128+1 )
    ThisStruct():AddMember( "szUser", 8, 256+1 )
    ThisStruct():AddMember( "szPass", 8, 256+1 )
    ThisStruct():AddMember( "szDomain", 8, 15+1 )
   ThisStruct( nil )

   RasStruct:nSize := 1052

   RasStruct:szEntry := cEntry+chr(0)
   RasStruct:szUser  := cUser+chr(0)
   RasStruct:szPass  := cPass+chr(0)

Return( Ras_DialER(,,RasStruct:cBuffer,4294967295,oDlg:hWnd,@hRas) )








function RAS_DIALER( cDialExt,cPPhoneBook,Rstruct,nType,hWnd,hRas ) ; local _hDLL := If( ValType( "rasapi32.dll" ) == "N", "rasapi32.dll", LoadLibrary( "rasapi32.dll" ) ) ; local uResult ; local cFarProc ; if Abs( _hDLL ) > 32 ; cFarProc = GetProcAdd( _hDLL, If( Empty( "RasDialA" ) == .T., "RAS_DIALER", "RasDialA" ), .T., 12,9,9,9,12,12,10 ) ; uResult = FWCallDLL( cFarProc,cDialExt,cPPhoneBook,Rstruct,nType,hWnd,@hRas ) ; IIF( ValType( "rasapi32.dll" ) == "N",, FreeLibrary( _hDLL ) ) ; else ; MsgAlert( "Error code: " + LTrim( Str( _hDLL ) ) + " loading " + If( ValType( "rasapi32.dll" ) == "C", "rasapi32.dll", Str( "rasapi32.dll" ) ) ) ; end ; return uResult



Static Function GetStatus( oDlg, oSay, oBtn, lServer, hRas )

local RasConnStat,cBuffer,nError

oTimer:DeActivate()

RasConnStat := ThisStruct( TStruct():New() )
  ThisStruct():AddMember( "nSize", 12, )
  ThisStruct():AddMember( "nStatus", 12, )
  ThisStruct():AddMember( "nError", 12, )
  ThisStruct():AddMember( "szDevType", 8, 16+1 )
  ThisStruct():AddMember( "szDevName", 8, 128+1 )
ThisStruct( nil )

RasConnStat:nSize := 160

cBuffer := RasConnStat:cBuffer

nError := RAS_STATUS(hRas,@cBuffer)

if nError <> 0
   Ras_Hangup(hRas)
   hRas := 0
   oDlg:end()
   oTimer:end()
   MsgInfo( iif(LoadString( GetResources(), nError ) == "","Unknown Error "+str(nError),LoadString( GetResources(), nError ) ) )
   return nil
endif

RasConnStat:cBuffer := cBuffer

if RasConnStat:nStatus <> nOldStatus
   oSay:SetText( PADR( LoadString( GetResources(),RasConnStat:nStatus ), 50 ) )
   nOldStatus := RasConnStat:nStatus
endif

if RasConnStat:nStatus == 8192
   oDlg:end()
   oTimer:end()
   return nil
endif

if RasConnStat:nStatus == 8192+1
   if lServer
      Ras_Hangup(hRas)
      hRas := 0
      oDlg:end()
      oTimer:end()
      return nil
   endif
   EnableWindow( oDlg:GetItem(oBtn:nID), .T. )
endif

oTimer:Activate()

Return nil



Static Function RASPWincr(nFrame,nDirection,oIco)

Do Case
   Case nDirection = 1 .AND. nFrame < 4
      nFrame++
   Case nDirection = 1 .AND. nFrame >= 4
      nFrame--
      nDirection = -1
   Case nDirection = -1 .AND. nFrame > 1
      nFrame--
   Case nDirection = -1 .AND. nFrame <= 1
      nFrame++
      nDirection = 1
EndCase

oIco:SetName( "RAS" + AllTrim( Str( nFrame ) ) )

Return nil


Function EditEntry(cEntry)

local cEntries := ""
local nSize := 0
local nRasindex := 0
local nRasCount := 0
local RasEntry
local lFoundIt := .F.
local nError

RasEntry := ThisStruct( TStruct():New() )
 ThisStruct():AddMember( "nSize", 12, )
 ThisStruct():AddMember( "szEntry", 8, 256+1 )
ThisStruct( nil )

RasEntry:nSize := 264

cEntries := RasEntry:cBuffer

if (RAS_ENUM(,,@cEntries,@nSize, @nRAScount ) <> 0)

   cEntries := REPLICATE( RasEntry:cBuffer, nRASCount )

   nError := RAS_ENUM(,,@cEntries,@nSize, @nRAScount )
   if nError <> 0
      MsgInfo( iif(LoadString( GetResources(), nError ) == "","Unknown Error "+str(nError),LoadString( GetResources(), nError ) ) )
   endif
endif

for nRasIndex = 1 to nRasCount
   if left(substr(cEntries,((nRasIndex-1)*264)+5,264-4),len(trim(cEntry))) == trim(cEntry)
      lFoundIt := .T.
      exit
   endif
next

if lFoundIt
   nError := EDIT_ENTRY(GetActiveWindow(),,cEntry)
   if nError <> 0
      MsgInfo( iif(LoadString( GetResources(), nError ) == "","Unknown Error "+str(nError),LoadString( GetResources(), nError ) ) )
   endif
else
   cEntry := ""
   nError := ADD_ENTRY(GetActiveWindow())

   if nError == 0

      cEntries := RasEntry:cBuffer

      if (RAS_ENUM(,, @cEntries,@nSize, @nRAScount ) <> 0 )

         cEntries := REPLICATE( RasEntry:cBuffer, nRASCount )

         nError := RAS_ENUM(,, @cEntries,@nSize, @nRAScount )
         if nError <> 0
            MsgInfo( iif(LoadString( GetResources(), nError ) == "","Unknown Error "+str(nError),LoadString( GetResources(), nError ) ) )
         endif
      endif



      RasEntry:cBuffer := substr(cEntries,((nRasCount-1)*264)+1,264)
      cEntry := left(RasEntry:szEntry,at(chr(0),RasEntry:szEntry)-1)
   else
      MsgInfo( iif(LoadString( GetResources(), nError ) == "","Unknown Error "+str(nError),LoadString( GetResources(), nError ) ) )
   endif
endif

return(cEntry)







function RAS_STATUS( hRas,Rstruct ) ; local _hDLL := If( ValType( "rasapi32.dll" ) == "N", "rasapi32.dll", LoadLibrary( "rasapi32.dll" ) ) ; local uResult ; local cFarProc ; if Abs( _hDLL ) > 32 ; cFarProc = GetProcAdd( _hDLL, If( Empty( "RasGetConnectStatusA" ) == .T., "RAS_STATUS", "RasGetConnectStatusA" ), .T., 12,12,9 ) ; uResult = FWCallDLL( cFarProc,hRas,@Rstruct ) ; IIF( ValType( "rasapi32.dll" ) == "N",, FreeLibrary( _hDLL ) ) ; else ; MsgAlert( "Error code: " + LTrim( Str( _hDLL ) ) + " loading " + If( ValType( "rasapi32.dll" ) == "C", "rasapi32.dll", Str( "rasapi32.dll" ) ) ) ; end ; return uResult



function RAS_HANGUP( hRas ) ; local _hDLL := If( ValType( "rasapi32.dll" ) == "N", "rasapi32.dll", LoadLibrary( "rasapi32.dll" ) ) ; local uResult ; local cFarProc ; if Abs( _hDLL ) > 32 ; cFarProc = GetProcAdd( _hDLL, If( Empty( "RasHangUpA" ) == .T., "RAS_HANGUP", "RasHangUpA" ), .T., 12,12 ) ; uResult = FWCallDLL( cFarProc,hRas ) ; IIF( ValType( "rasapi32.dll" ) == "N",, FreeLibrary( _hDLL ) ) ; else ; MsgAlert( "Error code: " + LTrim( Str( _hDLL ) ) + " loading " + If( ValType( "rasapi32.dll" ) == "C", "rasapi32.dll", Str( "rasapi32.dll" ) ) ) ; end ; return uResult





function EDIT_ENTRY( hWnd,cPphoneBook,cEntry ) ; local _hDLL := If( ValType( "rasapi32.dll" ) == "N", "rasapi32.dll", LoadLibrary( "rasapi32.dll" ) ) ; local uResult ; local cFarProc ; if Abs( _hDLL ) > 32 ; cFarProc = GetProcAdd( _hDLL, If( Empty( "RasEditPhonebookEntryA" ) == .T., "EDIT_ENTRY", "RasEditPhonebookEntryA" ), .T., 12,12,9,9 ) ; uResult = FWCallDLL( cFarProc,hWnd,cPphoneBook,cEntry ) ; IIF( ValType( "rasapi32.dll" ) == "N",, FreeLibrary( _hDLL ) ) ; else ; MsgAlert( "Error code: " + LTrim( Str( _hDLL ) ) + " loading " + If( ValType( "rasapi32.dll" ) == "C", "rasapi32.dll", Str( "rasapi32.dll" ) ) ) ; end ; return uResult




function ADD_ENTRY( hWnd,cPphoneBook ) ; local _hDLL := If( ValType( "rasapi32.dll" ) == "N", "rasapi32.dll", LoadLibrary( "rasapi32.dll" ) ) ; local uResult ; local cFarProc ; if Abs( _hDLL ) > 32 ; cFarProc = GetProcAdd( _hDLL, If( Empty( "RasCreatePhonebookEntryA" ) == .T., "ADD_ENTRY", "RasCreatePhonebookEntryA" ), .T., 12,12,9 ) ; uResult = FWCallDLL( cFarProc,hWnd,cPphoneBook ) ; IIF( ValType( "rasapi32.dll" ) == "N",, FreeLibrary( _hDLL ) ) ; else ; MsgAlert( "Error code: " + LTrim( Str( _hDLL ) ) + " loading " + If( ValType( "rasapi32.dll" ) == "C", "rasapi32.dll", Str( "rasapi32.dll" ) ) ) ; end ; return uResult








function RAS_ENUM( cReserved,cPphoneBook,cEntry,nSize,nEntries ) ; local _hDLL := If( ValType( "rasapi32.dll" ) == "N", "rasapi32.dll", LoadLibrary( "rasapi32.dll" ) ) ; local uResult ; local cFarProc ; if Abs( _hDLL ) > 32 ; cFarProc = GetProcAdd( _hDLL, If( Empty( "RasEnumEntriesA" ) == .T., "RAS_ENUM", "RasEnumEntriesA" ), .T., 12,9,9,9,10,10 ) ; uResult = FWCallDLL( cFarProc,cReserved,cPphoneBook,@cEntry,@nSize,@nEntries ) ; IIF( ValType( "rasapi32.dll" ) == "N",, FreeLibrary( _hDLL ) ) ; else ; MsgAlert( "Error code: " + LTrim( Str( _hDLL ) ) + " loading " + If( ValType( "rasapi32.dll" ) == "C", "rasapi32.dll", Str( "rasapi32.dll" ) ) ) ; end ; return uResult
