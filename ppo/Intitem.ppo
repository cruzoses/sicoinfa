#line 112 "hbclass.ch"
   DYNAMIC DivertConstructorCall
















DECLARE HBClass  New( cName AS String, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS Object  Instance() AS Object  AddClsMethod( cName AS String, @MethodName(), nScope AS Numeric, n2 AS Numeric, n3 AS Numeric )  AddDelegate( cName AS String, cDelegate AS String, cObject AS String, nScope AS Numeric, lPersistent AS LOGICAL )  AddMultiClsData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String )  AddMultiData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  AddInLine( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  AddVirtual( cName AS String )  ModMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  ModClsMethod( cName AS String, @MethodName(), nScope AS Numeric )  ModInline( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  SetOnError( @MethodName() )
#line 85 "\Fwh1204\Include\FiveWin.Ch"
   EXTERNAL GetProcAdd
   EXTERNAL TActiveX




extern errorsys
#line 13 ".\Prg\Intitem.prg"
_HB_CLASS TSenderReciverItem ; UTILITY FUNCTION TSenderReciverItem(...); static s_oClass ; local oClassInstance ; local nScope ; nScope := 1 ; if s_oClass == NIL ; s_oClass := IIF(.F.,, HBClass():New( "TSenderReciverItem" , { HBObject():Classh } ) ) ;

   _HB_MEMBER { cText} ; IIF( !.F., s_oClass:AddMultiData(,, nScope + IIF( .F., 32, 0 ), { "cText" }, .F., .F. ), )

   _HB_MEMBER { oSender} ; IIF( !.F., s_oClass:AddMultiData(,, nScope + IIF( .F., 32, 0 ), { "oSender" }, .F., .F. ), )

   _HB_MEMBER { lSelectSend} ; IIF( !.F., s_oClass:AddMultiData(,, nScope + IIF( .F., 32, 0 ), { "lSelectSend" }, .F., .F. ), )
   _HB_MEMBER { lSelectRecive} ; IIF( !.F., s_oClass:AddMultiData(,, nScope + IIF( .F., 32, 0 ), { "lSelectRecive" }, .F., .F. ), )

   _HB_MEMBER { nNumberSend} ; IIF( !.F., s_oClass:AddMultiData(, 0, nScope + IIF( .F., 32, 0 ), { "nNumberSend" }, .F., .F. ), )
   _HB_MEMBER { nNumberRecive} ; IIF( !.F., s_oClass:AddMultiData(, 0, nScope + IIF( .F., 32, 0 ), { "nNumberRecive" }, .F., .F. ), )

   _HB_MEMBER { cIniFile} ; IIF( !.F., s_oClass:AddMultiData(,, nScope + IIF( .F., 32, 0 ), { "cIniFile" }, .F., .F. ), )

   _HB_MEMBER { lSuccesfullSend} ; IIF( !.F., s_oClass:AddMultiData(,, nScope + IIF( .F., 32, 0 ), { "lSuccesfullSend" }, .F., .F. ), )

   _HB_MEMBER New(); IIF( .F., s_oClass:ModMethod( "New", @TSenderReciverItem_New(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ), s_oClass:AddMethod( "New", @TSenderReciverItem_New(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ));

   _HB_MEMBER CreateData( ); IIF( !.F., s_oClass:AddVirtual( "CreateData" ), )

   _HB_MEMBER RestoreData( ); IIF( !.F., s_oClass:AddVirtual( "RestoreData" ), )

   _HB_MEMBER SendData( ); IIF( !.F., s_oClass:AddVirtual( "SendData" ), )

   _HB_MEMBER ReciveData( ); IIF( !.F., s_oClass:AddVirtual( "ReciveData" ), )

   _HB_MEMBER Process( ); IIF( !.F., s_oClass:AddVirtual( "Process" ), )

   _HB_MEMBER Save(); IIF( .F., s_oClass:ModMethod( "Save", @TSenderReciverItem_Save(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ), s_oClass:AddMethod( "Save", @TSenderReciverItem_Save(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ));

   _HB_MEMBER Load(); IIF( .F., s_oClass:ModMethod( "Load", @TSenderReciverItem_Load(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ), s_oClass:AddMethod( "Load", @TSenderReciverItem_Load(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ));

   _HB_MEMBER nGetNumberToSend(); IIF( .F., s_oClass:ModMethod( "nGetNumberToSend", @TSenderReciverItem_nGetNumberToSend(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ), s_oClass:AddMethod( "nGetNumberToSend", @TSenderReciverItem_nGetNumberToSend(), nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ));

   _HB_MEMBER SetNumberToSend(); IIF( .F., s_oClass:ModInline( "SetNumberToSend", {|Self | Self, WritePProString( "Numero", ::cText, cValToChar( ::nNumberSend ), ::cIniFile ) }, nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ), s_oClass:AddInline( "SetNumberToSend", {|Self | Self, WritePProString( "Numero", ::cText, cValToChar( ::nNumberSend ), ::cIniFile ) }, nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ) )

   _HB_MEMBER IncNumberToSend(); IIF( .F., s_oClass:ModInline( "IncNumberToSend", {|Self | Self, WritePProString( "Numero", ::cText, cValToChar( ++::nNumberSend ), ::cIniFile ) }, nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ), s_oClass:AddInline( "IncNumberToSend", {|Self | Self, WritePProString( "Numero", ::cText, cValToChar( ++::nNumberSend ), ::cIniFile ) }, nScope + IIF( .F., 16, 0 ) + IIF( .F., 1024, 0 ), .F. ) )

; IF .F. ; __clsActive(s_oClass:hClass) ; s_oClass:Refresh() ; ELSE ; s_oClass:Create() ; END ; oClassInstance := __clsInst( s_oClass:hClass ) ; IF __ObjHasMsg( oClassInstance, "InitClass" ); oClassInstance:InitClass( hb_aParams() ) ; END ; ELSE ; oClassInstance := __clsInst( s_oClass:hClass ) ; END ; IF PCount() > 0 ; DIVERT TO (@DivertConstructorCall()) OF s_oClass ; END ; RETURN oClassInstance AS CLASS TSenderReciverItem ;



UTILITY STATIC function TSenderReciverItem_New( cText, oSender) ; local Self AS CLASS TSenderReciverItem := QSelf() AS CLASS TSenderReciverItem

   ::cText           := cText
   ::oSender         := oSender
   ::cIniFile        := cPatEmp() + "Empresa.Ini"
   ::lSuccesfullSend := .F.

RETURN ( Self )



UTILITY STATIC function TSenderReciverItem_Save() ; local Self AS CLASS TSenderReciverItem := QSelf() AS CLASS TSenderReciverItem

   WritePProString( "Envio",     ::cText, cValToChar( ::lSelectSend ), ::cIniFile )
   WritePProString( "Recepcion", ::cText, cValToChar( ::lSelectRecive ), ::cIniFile )

RETURN ( Self )



UTILITY STATIC function TSenderReciverItem_Load() ; local Self AS CLASS TSenderReciverItem := QSelf() AS CLASS TSenderReciverItem

   ::lSelectSend     := ( Upper( GetPvProfString( "Envio", ::cText, cValToChar( ::lSelectSend ), ::cIniFile ) ) == ".T." )
   ::lSelectRecive   := ( Upper( GetPvProfString( "Recepcion", ::cText, cValToChar( ::lSelectRecive ), ::cIniFile ) ) == ".T." )

RETURN ( Self )



UTILITY STATIC function TSenderReciverItem_nGetNumberToSend() ; local Self AS CLASS TSenderReciverItem := QSelf() AS CLASS TSenderReciverItem

   ::nNumberSend     := GetPvProfInt( "Numero", ::cText, ::nNumberSend, ::cIniFile )

Return ( ::nNumberSend )
