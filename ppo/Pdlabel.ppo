#line 112 "hbclass.ch"
   DYNAMIC DivertConstructorCall
















DECLARE HBClass  New( cName AS String, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS Object  Instance() AS Object  AddClsMethod( cName AS String, @MethodName(), nScope AS Numeric, n2 AS Numeric, n3 AS Numeric )  AddDelegate( cName AS String, cDelegate AS String, cObject AS String, nScope AS Numeric, lPersistent AS LOGICAL )  AddMultiClsData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String )  AddMultiData( cType AS String, uVal, nScope AS Numeric, aDatas AS Array OF String, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  AddInLine( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  AddVirtual( cName AS String )  ModMethod( cName AS String, @MethodName(), nScope AS Numeric, lPersistent AS LOGICAL )  ModClsMethod( cName AS String, @MethodName(), nScope AS Numeric )  ModInline( cName AS String, bBlock AS CodeBlock, nScope AS Numeric, lPersistent AS LOGICAL )  SetOnError( @MethodName() )
#line 85 "\Fwh1204\Include\FiveWin.Ch"
   EXTERNAL GetProcAdd
   EXTERNAL TActiveX




extern errorsys
#line 18 ".\Prg\Pdlabel.prg"
STATIC aLabels  := {}
















FUNCTION LblBegin( nLblWidth ,    nLblHeight,    nHSeparator,    nVSeparator,    nLblOnLine,    aFont,    aPen,    cLblFile,    cResName,    toPrint,    toScreen,    toFile,    oDevice,    cName )















    AAdd( aLabels , { TLabel():New( nLblWidth ,    nLblHeight,    nHSeparator,    nVSeparator,    nLblOnLine,    aFont,    aPen,    cLblFile,    cResName,    toPrint,    toScreen,    toFile,    oDevice,    cName ), {} } )

RETURN ATail( aLabels )[ 1 ]











FUNCTION LblAddItem( nRow,    bData,    nSize,    aPicture,    uFont,    nPen,    cFmt,    lShadow,    lGrid )

      LOCAL oItem










      oItem := TLItem():New(nRow,    bData,    nSize,    aPicture,    uFont,    nPen,    cFmt,    lShadow,    lGrid,    Atail(aLabels)[ 1 ] )

      AAdd( ATail( aLabels )[ 2 ], oItem )

RETURN oItem















FUNCTION LblAddOItem(   nRow, bData, nSize, aPicture, oFont, nPen, cFmt, lShadow, lGrid, lEan13, lHorz, lBanner, nRgbColor )

      LOCAL oItem














     oItem := TLOItem():New(nRow,    bData,    nSize,    aPicture,    oFont,    nPen,    cFmt,    lShadow,    lGrid,    lEan13,    lHorz,    lBanner,    nRgbColor,    Atail(aLabels)[ 1 ] )

      AAdd( ATail( aLabels )[ 2 ], oItem )

RETURN oItem



FUNCTION LblEnd()

    LOCAL oLabel   := ATail( aLabels )[ 1 ]
    LOCAL aItems   := ATail( aLabels )[ 2  ]

    AEval( aItems, { | oItem | oLabel:AddItem( oItem ) } )

    ASize( aLabels, Len( aLabels ) - 1 )

RETURN oLabel
